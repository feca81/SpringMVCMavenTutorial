<?xml version="1.0" encoding="UTF-8"?>
<!--
       Copyright 2010-2013 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springmvcmaventutorial.dao.RentMapper">
	<cache />
	<insert id="insertRentedBook">
		insert into 
			BOOK_PERSON (
				PERSON_ID,
				BOOK_ID,
				RENTED_DATE
				)
			values (
				#{personId, jdbcType=NUMERIC},
				#{bookId, jdbcType=NUMERIC},
				#{rentedDate}
				)
	</insert>
	
	<delete id="deleteRentedBook">
		delete from
			BOOK_PERSON
		where
			BOOK_ID = #{bookId, jdbcType=NUMERIC} and
			PERSON_ID = #{personId, jdbcType=NUMERIC}
	</delete>
	
	<select id="selectRentedBooks" resultType="com.springmvcmaventutorial.bean.Book">
		select
			b.BOOK_ID as id,
			b.AUTHOR,
			b.TITLE,
			b.QUANTITY			
		from
			BOOK b
			inner join BOOK_PERSON bp on b.BOOK_ID = bp.BOOK_ID
	</select>
	
	<sql id="selectRentedBooksByMemberSql">
		select
			b.*,
			p.*,
			bp.RENTED_DATE
		from
			BOOK_PERSON bp
			left join BOOK b on b.BOOK_ID = bp.BOOK_ID
			left join PERSON p on p.PERSON_ID = bp.PERSON_ID
	</sql>
	
	<select id="selectRentedBooksByMember" resultMap="rentedBookResult">
		<include refid="selectRentedBooksByMemberSql"/>
		where
			bp.PERSON_ID = #{personId, jdbcType=NUMERIC}
	</select>
	
	<select id="selectRentedBooksByMemberList" resultMap="rentedBookResult">
		<include refid="selectRentedBooksByMemberSql"/>
	</select>
	
	<resultMap type="com.springmvcmaventutorial.bean.RentedBooksByMember" id="rentedBookResult">
		<result column="PERSON_ID" property="member.id" jdbcType="NUMERIC"/>
		<result column="FIRST_NAME" property="member.firstName" jdbcType="VARCHAR"/>
		<result column="LAST_NAME" property="member.lastName" jdbcType="VARCHAR"/>
		<result column="BIRTH_DATE" property="member.birthDate" jdbcType="DATE"/>
		<result column="CITY" property="member.city" jdbcType="VARCHAR"/>
		<result column="ZIP_CODE" property="member.zipCode" jdbcType="VARCHAR"/>
		<result column="STREET_ADDRESS_1" property="member.streetAddress1" jdbcType="VARCHAR"/>
		<result column="STREET_ADDRESS_2" property="member.streetAddress2" jdbcType="VARCHAR"/>
		<result column="STREET_ADDRESS_3" property="member.streetAddress3" jdbcType="VARCHAR"/>
		<result column="PHONE_NUMBER" property="member.phoneNumber" jdbcType="VARCHAR"/>
		<collection property="rentedBookList" ofType="com.springmvcmaventutorial.bean.Book">
			<id column="BOOK_ID" property="id" jdbcType="NUMERIC"/>
			<result column="AUTHOR" property="author" jdbcType="VARCHAR"/>
			<result column="TITLE" property="title" jdbcType="VARCHAR"/>
			<result column="QUANTITY" property="quantity" jdbcType="NUMERIC"/>
			<result column="RENTED_DATE" property="rentedDate" jdbcType="DATE"/>
		</collection>		
	</resultMap>
</mapper>